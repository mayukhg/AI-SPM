# =============================================================================
# AI Security Posture Management Platform - Environment Configuration
# =============================================================================
# Copy this file to .env and update the values for your deployment.
# This configuration supports both development and production environments
# for the hybrid microservices architecture.
# =============================================================================

# -----------------------------------------------------------------------------
# Database Configuration
# -----------------------------------------------------------------------------
# PostgreSQL database connection settings
DB_PASSWORD=ai_spm_secure_password_change_in_production
DATABASE_URL=postgresql://ai_spm_user:${DB_PASSWORD}@localhost:5432/ai_spm_db

# Individual database connection parameters (for legacy compatibility)
PGHOST=localhost
PGPORT=5432
PGUSER=ai_spm_user
PGPASSWORD=${DB_PASSWORD}
PGDATABASE=ai_spm_db

# -----------------------------------------------------------------------------
# Application Security
# -----------------------------------------------------------------------------
# Session management and security keys
SESSION_SECRET=your_super_secure_session_secret_key_change_in_production_64_chars_minimum

# Application environment
NODE_ENV=production
PORT=5000

# -----------------------------------------------------------------------------
# Microservices Configuration
# -----------------------------------------------------------------------------
# Internal service URLs (Docker Compose will use container names)
AI_SCANNER_URL=http://localhost:8001
DATA_INTEGRITY_URL=http://localhost:8002
WIZ_INTEGRATION_URL=http://localhost:8003
COMPLIANCE_ENGINE_URL=http://localhost:8004

# Service worker configuration
AI_SCANNER_WORKERS=1
DATA_INTEGRITY_WORKERS=1
WIZ_INTEGRATION_WORKERS=1
COMPLIANCE_ENGINE_WORKERS=1

# -----------------------------------------------------------------------------
# External Integrations
# -----------------------------------------------------------------------------
# Wiz Security Platform Integration (Optional)
# Register at Wiz platform to get these credentials
WIZ_CLIENT_ID=your_wiz_client_id_here
WIZ_CLIENT_SECRET=your_wiz_client_secret_here
WIZ_AUDIENCE=beyond-api

# Other external service configurations
# Add your external service configurations here

# -----------------------------------------------------------------------------
# Logging and Monitoring
# -----------------------------------------------------------------------------
# Log level for all services
LOG_LEVEL=INFO

# Monitoring and observability
ENABLE_METRICS=true
METRICS_PORT=9090

# -----------------------------------------------------------------------------
# Development Configuration
# -----------------------------------------------------------------------------
# Development-specific settings
DEV_MODE=false
DEBUG_MODE=false
HOT_RELOAD=false

# Development database (if different from production)
DEV_DATABASE_URL=postgresql://ai_spm_user:dev_password@localhost:5432/ai_spm_dev

# -----------------------------------------------------------------------------
# Production Configuration
# -----------------------------------------------------------------------------
# Production-specific optimizations
PRODUCTION_MODE=true
ENABLE_COMPRESSION=true
ENABLE_CACHING=true
CACHE_TTL=3600

# SSL/TLS Configuration (for production)
SSL_ENABLED=false
SSL_CERT_PATH=/path/to/ssl/cert.pem
SSL_KEY_PATH=/path/to/ssl/key.pem

# -----------------------------------------------------------------------------
# Cloud Deployment Configuration
# -----------------------------------------------------------------------------
# AWS Configuration (for CloudFormation deployment)
AWS_REGION=us-east-1
AWS_ACCOUNT_ID=123456789012

# Container registry configuration
ECR_NODEJS_REPOSITORY=your-account.dkr.ecr.us-east-1.amazonaws.com/ai-spm-nodejs-gateway
ECR_PYTHON_REPOSITORY=your-account.dkr.ecr.us-east-1.amazonaws.com/ai-spm-python-microservices

# CloudFormation stack configuration
CLOUDFORMATION_STACK_NAME=ai-spm-production
ENABLE_MICROSERVICES=true

# -----------------------------------------------------------------------------
# Security and Compliance
# -----------------------------------------------------------------------------
# Security headers and CORS
CORS_ORIGIN=https://your-domain.com
SECURITY_HEADERS_ENABLED=true

# Audit and compliance settings
AUDIT_LOG_RETENTION_DAYS=90
COMPLIANCE_REPORTING_ENABLED=true

# Rate limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# -----------------------------------------------------------------------------
# Performance Tuning
# -----------------------------------------------------------------------------
# Database connection pooling
DB_POOL_MIN=2
DB_POOL_MAX=20
DB_POOL_IDLE_TIMEOUT=30000

# Application performance
MAX_REQUEST_SIZE=10mb
REQUEST_TIMEOUT=30000

# Microservices performance
MICROSERVICE_TIMEOUT=30000
MICROSERVICE_RETRY_ATTEMPTS=3

# =============================================================================
# Environment-Specific Examples:
# =============================================================================
#
# Development Environment:
# NODE_ENV=development
# LOG_LEVEL=DEBUG
# DEV_MODE=true
# AI_SCANNER_URL=http://localhost:8001
#
# Docker Compose Environment:
# NODE_ENV=production
# AI_SCANNER_URL=http://ai-scanner:8001
# DATA_INTEGRITY_URL=http://data-integrity:8002
# WIZ_INTEGRATION_URL=http://wiz-integration:8003
# COMPLIANCE_ENGINE_URL=http://compliance-engine:8004
#
# AWS ECS Environment:
# NODE_ENV=production
# AI_SCANNER_URL=http://ai-scanner.ai-spm-microservices.local:8001
# DATABASE_URL=postgresql://user:pass@rds-endpoint:5432/ai_spm_db
#
# =============================================================================
# Security Notes:
# =============================================================================
#
# 1. Change all default passwords and secrets in production
# 2. Use strong, randomly generated values for SESSION_SECRET
# 3. Store sensitive values in secure secret management systems
# 4. Never commit this file with real secrets to version control
# 5. Use environment-specific .env files for different deployments
# 6. Regularly rotate secrets and API keys
# 7. Monitor for exposed credentials in logs and error messages
#
# =============================================================================