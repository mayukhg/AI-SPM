# =============================================================================
# AI-SPM Service Mesh - Kubernetes Secrets Template
# =============================================================================
# This template shows the structure for secrets needed in the service mesh.
# In production, use sealed-secrets, external-secrets, or vault integration.
# =============================================================================

# WARNING: This is a template file. Do not commit actual secrets to version control.
# Use kubectl create secret or a secret management system in production.

# Example secret creation commands:
# kubectl create secret generic ai-spm-secrets \
#   --from-literal=database-password='your_secure_password' \
#   --from-literal=session-secret='your_64_character_session_secret' \
#   --from-literal=wiz-client-id='your_wiz_client_id' \
#   --from-literal=wiz-client-secret='your_wiz_client_secret' \
#   --namespace=ai-spm

apiVersion: v1
kind: Secret
metadata:
  name: ai-spm-secrets
  namespace: ai-spm
  labels:
    app: ai-spm
    type: application-secrets
  annotations:
    description: "Main application secrets for AI-SPM platform"
    rotation-policy: "90-days"
type: Opaque
data:
  # Base64 encoded values - replace with actual values
  # Use: echo -n 'your_password' | base64
  database-password: REPLACE_WITH_BASE64_ENCODED_PASSWORD
  database-url: REPLACE_WITH_BASE64_ENCODED_DATABASE_URL
  session-secret: REPLACE_WITH_BASE64_ENCODED_SESSION_SECRET
  wiz-client-id: REPLACE_WITH_BASE64_ENCODED_WIZ_CLIENT_ID
  wiz-client-secret: REPLACE_WITH_BASE64_ENCODED_WIZ_CLIENT_SECRET
---
# TLS Certificate Secret for Istio Gateway
apiVersion: v1
kind: Secret
metadata:
  name: ai-spm-tls-cert
  namespace: ai-spm
  labels:
    app: ai-spm
    type: tls-certificate
  annotations:
    description: "TLS certificate for external gateway"
    cert-manager.io/issuer: "letsencrypt-prod"
type: kubernetes.io/tls
data:
  # Replace with actual certificate and key
  tls.crt: REPLACE_WITH_BASE64_ENCODED_CERTIFICATE
  tls.key: REPLACE_WITH_BASE64_ENCODED_PRIVATE_KEY
---
# Container Registry Secret (if using private registry)
apiVersion: v1
kind: Secret
metadata:
  name: ai-spm-registry-secret
  namespace: ai-spm
  labels:
    app: ai-spm
    type: docker-registry
  annotations:
    description: "Docker registry credentials for private images"
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: REPLACE_WITH_BASE64_ENCODED_DOCKER_CONFIG
---
# Istio CA Root Certificate (if using custom CA)
apiVersion: v1
kind: Secret
metadata:
  name: istio-ca-secret
  namespace: ai-spm
  labels:
    app: istio
    type: ca-certificate
  annotations:
    description: "Custom CA certificate for Istio mTLS"
type: Opaque
data:
  root-cert.pem: REPLACE_WITH_BASE64_ENCODED_ROOT_CERT
  cert-chain.pem: REPLACE_WITH_BASE64_ENCODED_CERT_CHAIN
  ca-cert.pem: REPLACE_WITH_BASE64_ENCODED_CA_CERT
  ca-key.pem: REPLACE_WITH_BASE64_ENCODED_CA_KEY