# =============================================================================
# AI-SPM Service Mesh - Authorization Policies
# =============================================================================
# These policies define fine-grained access control between services,
# ensuring only authorized components can communicate with each other.
# =============================================================================

# Default deny-all policy for the namespace
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: ai-spm-default-deny
  namespace: ai-spm
  labels:
    app: ai-spm
    security: authorization
spec:
  # Empty spec means deny all by default
---
# Allow external traffic to API Gateway
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: api-gateway-external-access
  namespace: ai-spm
  labels:
    app: api-gateway
    security: authorization
spec:
  selector:
    matchLabels:
      app: api-gateway
  rules:
  - from:
    - source: {}  # Allow from any source (external traffic)
    to:
    - operation:
        methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
        paths: ["/*"]
    when:
    - key: destination.port
      values: ["5000"]
---
# Allow API Gateway to communicate with Python microservices
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: api-gateway-to-microservices
  namespace: ai-spm
  labels:
    app: python-microservices
    security: authorization
spec:
  selector:
    matchLabels:
      tier: microservice
  rules:
  - from:
    - source:
        principals: ["cluster.local/ns/ai-spm/sa/api-gateway"]
    to:
    - operation:
        methods: ["GET", "POST", "PUT", "DELETE"]
        paths: ["/health", "/scan/*", "/check/*", "/integrate", "/assess/*", "/evaluate/*"]
    when:
    - key: destination.port
      values: ["8001", "8002", "8003", "8004"]
---
# Allow microservices to communicate with database
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: microservices-to-database
  namespace: ai-spm
  labels:
    app: database
    security: authorization
spec:
  selector:
    matchLabels:
      app: database
  rules:
  - from:
    - source:
        principals: 
        - "cluster.local/ns/ai-spm/sa/api-gateway"
        - "cluster.local/ns/ai-spm/sa/ai-scanner"
        - "cluster.local/ns/ai-spm/sa/data-integrity"
        - "cluster.local/ns/ai-spm/sa/wiz-integration"
        - "cluster.local/ns/ai-spm/sa/compliance-engine"
    to:
    - operation:
        ports: ["5432"]
---
# Allow health check access for all services
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: health-check-access
  namespace: ai-spm
  labels:
    app: ai-spm
    security: authorization
spec:
  selector:
    matchLabels:
      health-check: enabled
  rules:
  - from:
    - source:
        principals: ["cluster.local/ns/ai-spm/sa/api-gateway"]
    - source:
        namespaces: ["istio-system"]  # Allow Istio health checks
    to:
    - operation:
        methods: ["GET"]
        paths: ["/health", "/healthz", "/ready"]